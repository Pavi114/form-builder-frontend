{"version":3,"sources":["components/textbox.js","components/checkbox.js","components/textarea.js","components/form.js","index.js"],"names":["TextBox","label","e","preventDefault","val","target","value","this","props","handleChange","react_default","a","createElement","Label","Input","type","onChange","bind","React","Component","CheckBox","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","checkboxes","addOption","assertThisInitialized","handleCheck","handleLabel","key","console","log","change1","setState","change","prevState","concat","toConsumableArray","checked","_this2","keys","map","Row","onInput","placeholder","onClick","TextArea","Form1","fields","dropdownOpen","newLabel","toggle","handleSubmit","event","alert","values","join","_this3","f","_this4","Form","onSubmit","textbox","components_textarea","components_checkbox","newLabelChange","ButtonDropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","addButton","divider","ReactDOM","render","components_form","document","getElementById"],"mappings":"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","file":"static/js/main.f33f9f3b.chunk.js","sourcesContent":["import React from \"react\"\nimport { Label, Input} from 'reactstrap';\nclass TextBox extends React.Component {\n    handleChange(label,e) {\n        e.preventDefault();\n        const val = e.target.value;\n        this.props.handleChange(label, val);\n      }\n    render() {\n        return (\n            <div>\n                <Label>{this.props.label}</Label>\n                <Input \n                    type=\"text\"\n                    onChange={this.handleChange.bind(this,this.props.label)}\n                />\n            </div>\n        )\n    }\n}\nexport default TextBox","import React, {Component} from \"react\"\nimport { Row, Label, Input } from 'reactstrap';\nclass CheckBox extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            checkboxes: [[\"\",false]],\n        }\n        this.addOption = this.addOption.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.handleLabel = this.handleLabel.bind(this);\n    }\n\n    handleCheck(label, key, e) {\n        e.preventDefault();\n        const val = e.target.value;\n        console.log(val+\" \"+key);\n        let change1 = this.state.checkboxes;\n        change1[key][1]= !change1[key][1];\n        this.setState(change1);\n        console.log(this.state.checkboxes[key]);\n    }\n    \n    handleLabel(label, key, e) {\n        e.preventDefault();\n        const val = e.target.value;\n        console.log(val+\" \"+key);\n        let change = this.state.checkboxes;\n        change[key][0]= val;\n        this.setState(change);\n        console.log(this.state.checkboxes[key]);\n        // this.props.handleChange(label, val);\n    }\n    addOption() {\n        this.setState(prevState => ({ checkboxes: [...prevState.checkboxes, {label:'',checked:false}] }))\n    }\n    render() {\n        return (\n            <div>\n                <Label>{this.props.label}</Label><br/>\n              {\n              Object.keys(this.state.checkboxes).map((key, value) => {\n                return <Row>\n                <Input type=\"checkbox\" checked={this.state.checkboxes[key][1]} onInput={this.handleCheck.bind(this, this.props.label, key)} />\n                <Input key={key} type=\"text\" placeholder=\"Option\" onChange={this.handleLabel.bind(this, this.props.label, key)} />\n                </Row>\n              })\n              }\n            <Input type=\"button\" onClick={this.addOption} value=\"Add option\"/>\n          </div>\n        )\n    }\n}\nexport default CheckBox","import React from \"react\"\nimport {Label, Input } from 'reactstrap';\nclass TextArea extends React.Component {\n    handleChange(label,e) {\n        e.preventDefault();\n        const val = e.target.value;\n        this.props.handleChange(label, val);\n      }\n    render() {\n        return (\n            <div>\n                <Label>{this.props.label}</Label>\n                <Input\n                    type=\"textarea\"\n                    onChange={this.handleChange.bind(this,this.props.label)}\n                    />\n            </div>\n        )\n    }\n}\nexport default TextArea","import React from \"react\"\nimport TextBox from './textbox'\nimport CheckBox from './checkbox'\nimport TextArea from './textarea'\nimport { Form, Input} from 'reactstrap';\nimport {ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\nclass Form1 extends React.Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n      fields : [\n          [\"Name of Form\",\"TextBox\",\"\"],\n          [\"Description\",\"TextArea\",\"\"],\n        ],\n      dropdownOpen: false,\n      newLabel: \"\",\n    };\n    this.toggle = this.toggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n    addButton(type){\n        this.setState(prevState => ({ fields: [...prevState.fields, [this.state.newLabel,type]]}))\n    }\n    toggle() {\n        this.setState({\n          dropdownOpen: !this.state.dropdownOpen\n        });\n      }\n    newLabelChange(e){\n        let change = {};\n        change[\"newLabel\"] = e.target.value;\n        this.setState(change);\n    }\n    deleteBtn(){\n        \n    }\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.values.join(', '));\n        console.log()\n        event.preventDefault();\n      }\n    handleChange(label, value) {\n      console.log(this.state.fields);\n      const f = this.state.fields;\n      Object.keys(f).map((key) => {\n        if(f[key][0] === label)\n        {\n          let a = f[key];\n          a[2]=value;\n          this.setState({a});\n          // console.log(f[key][2]);\n        }\n      })\n    }\n    render() {\n        return (\n        <Form onSubmit={this.handleSubmit}>\n            {   \n                Object.keys(this.state.fields).map((key) => {\n                        if(this.state.fields[key][1] === \"TextBox\" && this.state.fields[key][0]!==\"\")\n                        return <TextBox handleChange={this.handleChange} label={this.state.fields[key][0]} />\n                        else if(this.state.fields[key][1] === \"TextArea\" && this.state.fields[key][0]!==\"\")\n                        return <TextArea handleChange={this.handleChange} label={this.state.fields[key][0]} />\n                        else if(this.state.fields[key][1] === \"CheckBox\" && this.state.fields[key][0]!==\"\")\n                        return <CheckBox handleChange={this.handleChange} label={this.state.fields[key][0]} />\n                        return null\n            })\n            }\n            {/* <input type=\"button\" value=\"add more\" onClick={this.addButton.bind(this)}></input> */}\n            <Input type=\"text\" placeholder=\"newLabel\" onChange={this.newLabelChange.bind(this)} value={this.state.newLabel} />\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n                <DropdownToggle caret>\n                Add another input\n                </DropdownToggle>\n                <DropdownMenu>\n                <DropdownItem onClick={this.addButton.bind(this,\"TextBox\")}>Text Box</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem onClick={this.addButton.bind(this,\"CheckBox\")}>CheckBox</DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown><br></br>\n            <Input type=\"submit\" value=\"Submit\" /> \n        </Form>\n        )\n    }\n}\nexport default Form1","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Form1 from './components/form'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(<Form1 />, document.getElementById('root'));\n"],"sourceRoot":""}